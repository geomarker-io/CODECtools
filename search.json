[{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://geomarker.io/CODECtools/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"http://geomarker.io/CODECtools/articles/codec-data.html","id":"language","dir":"Articles","previous_headings":"CODEC Data Specification","what":"Language","title":"CODEC Data","text":"keywords “MUST”, “MUST ”, “”, “”, “MAY” document interpreted described RFC 2119.","code":""},{"path":"http://geomarker.io/CODECtools/articles/codec-data.html","id":"file-formats","dir":"Articles","previous_headings":"CODEC Data Specification","what":"File Formats","title":"CODEC Data","text":"CODEC tabular-data-resource (.e., tdr) consists directory MUST contain exactly one data (CSV) file exactly one metadata file (tabular-data-resource.yaml). example, metadata file MUST valid YAML file named tabular-data-resource.yaml. name directory name CSV file containing data MUST match name descriptor metadata. files, - file encoding MUST UTF-8 - newlines MUST encoded either \\n \\r\\n - newline style consistent within file - newline end file","code":"mydata ├── mydata.csv └── tabular-data-resource.yaml"},{"path":"http://geomarker.io/CODECtools/articles/codec-data.html","id":"missing-values","dir":"Articles","previous_headings":"CODEC Data Specification","what":"Missing Values","title":"CODEC Data","text":"value missing, MUST represented either NA empty string (``) CSV data file.","code":""},{"path":"http://geomarker.io/CODECtools/articles/codec-data.html","id":"census-tract-geography","dir":"Articles","previous_headings":"CODEC Data Specification","what":"Census Tract Geography","title":"CODEC Data","text":"census tract column MUST specified metadata named census_tract_id_{year}, {year} replaced decennial vintage census tract geographies used create dataset (e.g., census_tract_id_2010 census_tract_id_2020). census tract identifier column MUST contain 11-digit GEOID identifiers census tracts Hamilton County (GEOID: 39061). list required census tract identifiers 2000, 2010, 2020 available {{cincy}} R package (e.g., cincy::tract_tigris_2010). CODEC tdr created census tract level link URL contains code descriptive README file data harmonized (e.g., areal interpolation) census tract geographies.","code":""},{"path":[]},{"path":[]},{"path":"http://geomarker.io/CODECtools/articles/codec-data.html","id":"why-csv","dir":"Articles","previous_headings":"Notes","what":"Why CSV?","title":"CODEC Data","text":"Although CSV file format relatively inefficient, open, well-known, widely supported, text-based, universal format ideal interoperability.","code":""},{"path":"http://geomarker.io/CODECtools/articles/codec-data.html","id":"data-location","dir":"Articles","previous_headings":"Notes","what":"Data Location","title":"CODEC Data","text":"bucket versioning","code":""},{"path":"http://geomarker.io/CODECtools/articles/codec-metadata.html","id":"metadata","dir":"Articles","previous_headings":"","what":"Metadata","title":"CODEC Metadata","text":"Metadata information data, contain data . example, CSV file tell R (software) anything including: general information like name, title, description, license, related URL missing values denoted column names, titles, types, formats, constraints specific CSV “dialect” characteristics required read (e.g. delimiter, encoding, quoting) CODEC utilizes specific set standards store community-level data effort make interoperable reusable.","code":""},{"path":"http://geomarker.io/CODECtools/articles/codec-metadata.html","id":"frictionless-standards","dir":"Articles","previous_headings":"","what":"Frictionless Standards","title":"CODEC Metadata","text":"Frictionless standards set patterns describing data, including datasets, files, tables. metadata contained specific file (separate data file), usually written JSON YAML, describes something specific Frictionless Standard. CODEC metadata specifications based Tabular Data Resource (often written ‘tabular-data-resource’ abbreviated throughout package tdr). tabular-data-resource made three Frictionless Standards: Data Resource: describes exact tabular file providing path file details like name, title, description, others Table Schema: describes tabular file providing dimension, field data types, relations, constraints CSV dialect: describes various dialects CSV files, including terminator strings, quoting rules, escape rules, etc. tabular-data-resource consists (1) single table data CSV file (2) metadata, represented hierarchical list specific format. disk, metadata stored YAML file R, stored attributes data.frame (tibble). 1","code":""},{"path":[]},{"path":"http://geomarker.io/CODECtools/articles/codec-metadata.html","id":"language","dir":"Articles","previous_headings":"CODEC Metadata Specifications","what":"Language","title":"CODEC Metadata","text":"keywords “MUST”, “MUST ”, “”, “”, “MAY” document interpreted described RFC 2119.","code":""},{"path":"http://geomarker.io/CODECtools/articles/codec-metadata.html","id":"version","dir":"Articles","previous_headings":"CODEC Metadata Specifications","what":"Version","title":"CODEC Metadata","text":"CODEC specifications versioned according {CODECtools} package, vignette describes version 0.1. see older versions specification, install older version {CODECtools}.","code":""},{"path":"http://geomarker.io/CODECtools/articles/codec-metadata.html","id":"tabular-data-resource-metadata","dir":"Articles","previous_headings":"CODEC Metadata Specifications","what":"Tabular-Data-Resource Metadata","title":"CODEC Metadata","text":"Within context CODEC, tabular-data-resouce metadata consists descriptors, schema, fields:  descriptor (“metadata property”) named value stored string used describe data resource schema may optionally contain value used denote missingness fields foreign primary keys Names descriptor, schema, field values MUST : CODEC tdr MUST contain name path descriptors. descriptors, schema, fields MAY present.","code":"CODECtools::codec_names() ## $descriptor ## [1] \"name\"        \"path\"        \"title\"       \"description\" \"url\"         ## [6] \"license\"     \"schema\"      ##  ## $schema ## [1] \"fields\"        \"missingValues\" \"primaryKey\"    \"foreignKey\"    ##  ## $fields ## [1] \"name\"        \"title\"       \"description\" \"type\"        \"constraints\""},{"path":"http://geomarker.io/CODECtools/articles/codec-metadata.html","id":"descriptor","dir":"Articles","previous_headings":"CODEC Metadata Specifications > Tabular-Data-Resource Metadata","what":"descriptor","title":"CODEC Metadata","text":"name: machine-friendly name dataset; must consist letters, numbers, underscores (_) path: path data CSV file relative tabular-data-resource.yaml file title: human-friendly name dataset description: additional notes data url: link repository code description data harmonized census tract geographies license: schema: list object containing following","code":""},{"path":"http://geomarker.io/CODECtools/articles/codec-metadata.html","id":"schema","dir":"Articles","previous_headings":"CODEC Metadata Specifications > Tabular-Data-Resource Metadata","what":"schema","title":"CODEC Metadata","text":"missingValues: denotes string values treated missing; default: NA empty string (``) primaryKey: field set fields uniquely identifies row table foreignKey: field set fields connect separate table fields: list object, one column, containing following","code":""},{"path":"http://geomarker.io/CODECtools/articles/codec-metadata.html","id":"fields","dir":"Articles","previous_headings":"CODEC Metadata Specifications > Tabular-Data-Resource Metadata","what":"fields","title":"CODEC Metadata","text":"name: machine-friendly name field/column; must identical name column data CSV file title: human-friendly name field/column description: additional notes field/column type: Frictionless type field/column (e.g., string, number, boolean) constraints: Frictionless constraints , including enum, array possible values factor levels","code":""},{"path":"http://geomarker.io/CODECtools/articles/tabular-data-resource.html","id":"creating-data","dir":"Articles","previous_headings":"","what":"Creating Data","title":"Working with a Tabular Data Resource in R","text":"create simple dataset example:","code":"d <-   tibble::tibble(     id = c(\"A01\", \"A02\", \"A03\"),     date = as.Date(c(\"2022-07-25\", \"2018-07-10\", \"2013-08-15\")),     measure = c(12.8, 13.9, 15.6),     rating = factor(c(\"good\", \"best\", \"best\"), levels = c(\"good\", \"better\", \"best\")),     ranking = as.integer(c(14, 17, 19)),     impt = c(FALSE, TRUE, TRUE)   )"},{"path":"http://geomarker.io/CODECtools/articles/tabular-data-resource.html","id":"adding-metadata","dir":"Articles","previous_headings":"","what":"Adding Metadata","title":"Working with a Tabular Data Resource in R","text":"creating tabular dataset R, data-specific metadata (.e., “descriptors”) can stored attributes R object (e.g., data.frame tibble). Note doesn’t change data values. R, object’s attributes stored list. attributes (?attributes) treated specially R (e.g., class, names, row.names, comment) usually shouldn’t modified. Although attributes (including ones added ) available list (?attributes), can use function extract attributes represent metadata descriptors tibble. Similarly, can add column-specific attributes (.e., “schema”). metadata functions follow tidy design principles, making simple expressively concisely add metadata using pipes: Automatically add name, type enum schema column data based class: Like descriptors, helper function retrieve schema tibble. Specify bind = TRUE combine list column-specific attribute data frames column one wider data frame:","code":"d <- d |>   add_attrs(     name = \"mydata\",     title = \"My Data\",     license = \"MIT\",     url = \"https://geomarker.io/CODECtools\"   ) ## get_descriptors(d) |>   ## knitr::kable() d <-   d |>   add_col_attrs(id, title = \"Identifier\", description = \"unique identifier\") |>   add_col_attrs(date, title = \"Date\", description = \"date of observation\") |>   add_col_attrs(measure, title = \"Measure\", description = \"measured quantity\") |>   add_col_attrs(rating, title = \"Rating\", description = \"ordered ranking of observation\") |>   add_col_attrs(ranking, title = \"Ranking\", description = \"rank of the observation\") |>   add_col_attrs(impt, title = \"Important\", description = \"true if this observation is important\") d <- add_type_attrs(d) ## get_schema(d, bind = TRUE) |>   ## knitr::kable()"},{"path":"http://geomarker.io/CODECtools/articles/tabular-data-resource.html","id":"writing-a-tabular-data-resource-to-disk","dir":"Articles","previous_headings":"","what":"Writing a tabular-data-resource to disk","title":"Working with a Tabular Data Resource in R","text":"metadata set tibble’s attributes, can save tabular data resource CSV file accompanying tabular-data-resource.yaml: name attribute supplied tibble used name newly created folder CSV file containing data. Metadata extracted supplied tibble’s attributes saved tabular-data-resource.yaml file lives alongside data file newly created directory:","code":"write_tdr_csv(d) #> ✔ created /home/runner/work/CODECtools/CODECtools/vignettes/mydata/ #> ✔ wrote data to /home/runner/work/CODECtools/CODECtools/vignettes/mydata/mydata.csv #> ✔ wrote metadata to /home/runner/work/CODECtools/CODECtools/vignettes/mydata/tabular-data-resource.yaml fs::dir_tree(\"mydata\") #> mydata #> ├── mydata.csv #> └── tabular-data-resource.yaml"},{"path":"http://geomarker.io/CODECtools/articles/tabular-data-resource.html","id":"reading-a-tabular-data-resource-from-disk","dir":"Articles","previous_headings":"","what":"Reading a tabular-data-resource from disk","title":"Working with a Tabular Data Resource in R","text":"can read tabular-data-package back R restore attributes, well column classes:","code":"mydata <- read_tdr_csv(\"mydata\") #> ✔ read in data from mydata/mydata.csv #> Warning: Outer names are only allowed for unnamed scalar atomic inputs mydata #> # A tibble: 3 × 6 #>   id    date       measure rating ranking impt  #>   <chr> <date>       <dbl> <fct>    <int> <lgl> #> 1 A01   2022-07-25    12.8 good        14 FALSE #> 2 A02   2018-07-10    13.9 best        17 TRUE  #> 3 A03   2013-08-15    15.6 best        19 TRUE"},{"path":"http://geomarker.io/CODECtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cole Brokamp. Author, maintainer.","code":""},{"path":"http://geomarker.io/CODECtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brokamp C (2022). CODECtools: Support CODEC data infrastructure. https://github.com/geomarker-io/CODECtools, http://geomarker.io/CODECtools/.","code":"@Manual{,   title = {CODECtools: Support CODEC data infrastructure},   author = {Cole Brokamp},   year = {2022},   note = {https://github.com/geomarker-io/CODECtools, http://geomarker.io/CODECtools/}, }"},{"path":"http://geomarker.io/CODECtools/index.html","id":"codectools","dir":"","previous_headings":"","what":"Support CODEC data infrastructure","title":"Support CODEC data infrastructure","text":"goal CODECtools support CODEC data infrastructure : capturing, creating, accessing metadata tabular data R importing exporting tabular data resources (CSV file) metadata (YAML file) defining CODEC data format specifications (vignette package) providing tools workflows validate CODEC data contribute CODECdata repository creation online data catalog","code":""},{"path":"http://geomarker.io/CODECtools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Support CODEC data infrastructure","text":"can install development version CODECtools GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"geomarker-io/CODECtools\")"},{"path":"http://geomarker.io/CODECtools/index.html","id":"related-projects","dir":"","previous_headings":"Installation","what":"Related Projects","title":"Support CODEC data infrastructure","text":"{{frictionless}} R package reading writing frictionless data packages Frictionless Web Tool creating validating frictionless data packages Frictionless Framework python Frictionless Validation github actions validation, visual reports, markdown badges","code":""},{"path":"http://geomarker.io/CODECtools/reference/CODECtools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CODECtools: Support CODEC data infrastructure — CODECtools-package","title":"CODECtools: Support CODEC data infrastructure — CODECtools-package","text":"CODECtools provides tools working metadata R storing alongside data YAML file. package serves definition CODEC data specifications provides helpers contribute validate CODEC data.","code":""},{"path":[]},{"path":"http://geomarker.io/CODECtools/reference/CODECtools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CODECtools: Support CODEC data infrastructure — CODECtools-package","text":"Maintainer: Cole Brokamp cole.brokamp@gmail.com (ORCID)","code":""},{"path":"http://geomarker.io/CODECtools/reference/add_attr_from_tdr.html","id":null,"dir":"Reference","previous_headings":"","what":"add attributes to a data.frame based on a tabular-data-resource list — add_attr_from_tdr","title":"add attributes to a data.frame based on a tabular-data-resource list — add_attr_from_tdr","text":"add attributes data.frame based tabular-data-resource list","code":""},{"path":"http://geomarker.io/CODECtools/reference/add_attr_from_tdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add attributes to a data.frame based on a tabular-data-resource list — add_attr_from_tdr","text":"","code":"add_attr_from_tdr(.x, tdr, codec = TRUE)"},{"path":"http://geomarker.io/CODECtools/reference/add_attr_from_tdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add attributes to a data.frame based on a tabular-data-resource list — add_attr_from_tdr","text":".x data.frame tibble tdr tabular-data-resource list (usually created read_tdr() make_tdr_from_attr()) codec logical; use CODEC descriptors?","code":""},{"path":"http://geomarker.io/CODECtools/reference/add_attr_from_tdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add attributes to a data.frame based on a tabular-data-resource list — add_attr_from_tdr","text":".x added tabular-data-resource attributes","code":""},{"path":"http://geomarker.io/CODECtools/reference/add_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"add attributes — add_attrs","title":"add attributes — add_attrs","text":"Use add_attr add attributes R object Use add_col_attr add attributes column inside data frame","code":""},{"path":"http://geomarker.io/CODECtools/reference/add_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add attributes — add_attrs","text":"","code":"add_attrs(.x, ...)  add_col_attrs(.x, var, ...)"},{"path":"http://geomarker.io/CODECtools/reference/add_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add attributes — add_attrs","text":".x object add attributes ... additional arguments name value corresponding metadata name value var name variable .x add attributes ","code":""},{"path":"http://geomarker.io/CODECtools/reference/add_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add attributes — add_attrs","text":".x updated attributes","code":""},{"path":"http://geomarker.io/CODECtools/reference/add_attrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add attributes — add_attrs","text":"","code":"add_attrs(mtcars, name = \"Motor Trend Cars\", year = \"1974\") #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2 add_col_attrs(mtcars, mpg, name = \"MPG\", description = \"Miles Per Gallon\") #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2"},{"path":"http://geomarker.io/CODECtools/reference/add_type_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"automatically add ","title":"automatically add ","text":"Given data.frame (tibble), function returns data.frame adding Frictionless \"name\" \"type\" attributes based name class column R:","code":""},{"path":"http://geomarker.io/CODECtools/reference/add_type_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"automatically add ","text":"","code":"add_type_attrs(.x)"},{"path":"http://geomarker.io/CODECtools/reference/add_type_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"automatically add ","text":".x data.frame tibble","code":""},{"path":"http://geomarker.io/CODECtools/reference/add_type_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"automatically add ","text":"object type .x, updated frictionless attributes factor columns input data frame attributes preserved","code":""},{"path":"http://geomarker.io/CODECtools/reference/add_type_attrs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"automatically add ","text":"*Levels factor columns also captured \"enum\" item \"constraints\" attribute list.","code":""},{"path":"http://geomarker.io/CODECtools/reference/codec_names.html","id":null,"dir":"Reference","previous_headings":"","what":"valid names for CODEC descriptor, schema, and fields — codec_names","title":"valid names for CODEC descriptor, schema, and fields — codec_names","text":"valid names CODEC descriptor, schema, fields","code":""},{"path":"http://geomarker.io/CODECtools/reference/codec_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"valid names for CODEC descriptor, schema, and fields — codec_names","text":"","code":"codec_names()"},{"path":"http://geomarker.io/CODECtools/reference/codec_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"valid names for CODEC descriptor, schema, and fields — codec_names","text":"list character vectors, one \"descriptor\", \"schema\", \"fields\"","code":""},{"path":"http://geomarker.io/CODECtools/reference/codec_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"valid names for CODEC descriptor, schema, and fields — codec_names","text":"","code":"codec_names() #> $descriptor #> [1] \"name\"        \"path\"        \"title\"       \"description\" \"url\"         #> [6] \"license\"     \"schema\"      #>  #> $schema #> [1] \"fields\"        \"missingValues\" \"primaryKey\"    \"foreignKey\"    #>  #> $fields #> [1] \"name\"        \"title\"       \"description\" \"type\"        \"constraints\" #>"},{"path":"http://geomarker.io/CODECtools/reference/get_descriptors.html","id":null,"dir":"Reference","previous_headings":"","what":"get CODEC descriptors and schema — get_descriptors","title":"get CODEC descriptors and schema — get_descriptors","text":"functions designed provide simple way extract tibbles descriptors schema data frames columns attributes: get_descriptors() gets descriptors data frame get_col_descriptors() gets field-specific descriptors single column inside data frame get_schema() gets field-specific descriptors columns inside data frame","code":""},{"path":"http://geomarker.io/CODECtools/reference/get_descriptors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get CODEC descriptors and schema — get_descriptors","text":"","code":"get_descriptors(.x, codec = TRUE)  get_col_descriptors(.x, codec = TRUE)  get_schema(.x, bind = TRUE, codec = TRUE)"},{"path":"http://geomarker.io/CODECtools/reference/get_descriptors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get CODEC descriptors and schema — get_descriptors","text":".x data frame tibble codec logical; return CODEC descriptors schema? bind logical; bind schema together one wide data frame?","code":""},{"path":"http://geomarker.io/CODECtools/reference/get_descriptors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get CODEC descriptors and schema — get_descriptors","text":"tibble (list tibbles get_schema() bind = FALSE) name value columns descriptor","code":""},{"path":"http://geomarker.io/CODECtools/reference/get_descriptors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get CODEC descriptors and schema — get_descriptors","text":"instead get complete data resource metadata (descriptors & schema) list, use make_tdr_from_attr()","code":""},{"path":"http://geomarker.io/CODECtools/reference/make_tdr_from_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"make a tabular-data-resource list from the attributes of a data.frame — make_tdr_from_attr","title":"make a tabular-data-resource list from the attributes of a data.frame — make_tdr_from_attr","text":"make tabular-data-resource list attributes data.frame","code":""},{"path":"http://geomarker.io/CODECtools/reference/make_tdr_from_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make a tabular-data-resource list from the attributes of a data.frame — make_tdr_from_attr","text":"","code":"make_tdr_from_attr(.x, codec = TRUE)"},{"path":"http://geomarker.io/CODECtools/reference/make_tdr_from_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make a tabular-data-resource list from the attributes of a data.frame — make_tdr_from_attr","text":".x data.frame tibble codec logical; use CODEC descriptors?","code":""},{"path":"http://geomarker.io/CODECtools/reference/make_tdr_from_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make a tabular-data-resource list from the attributes of a data.frame — make_tdr_from_attr","text":"list tabular-data-resource metadata","code":""},{"path":"http://geomarker.io/CODECtools/reference/read_tdr.html","id":null,"dir":"Reference","previous_headings":"","what":"read metadata in from a tabular-data-resource.yaml file — read_tdr","title":"read metadata in from a tabular-data-resource.yaml file — read_tdr","text":"read metadata tabular-data-resource.yaml file","code":""},{"path":"http://geomarker.io/CODECtools/reference/read_tdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read metadata in from a tabular-data-resource.yaml file — read_tdr","text":"","code":"read_tdr(file = \"tabular-data-resource.yaml\")"},{"path":"http://geomarker.io/CODECtools/reference/read_tdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read metadata in from a tabular-data-resource.yaml file — read_tdr","text":"file filename (connection) yaml file read metadata ","code":""},{"path":"http://geomarker.io/CODECtools/reference/read_tdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read metadata in from a tabular-data-resource.yaml file — read_tdr","text":"list frictionless metadata","code":""},{"path":"http://geomarker.io/CODECtools/reference/read_tdr_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"read a CSV tabular data resource into R — read_tdr_csv","title":"read a CSV tabular data resource into R — read_tdr_csv","text":"CSV file defined tabular-data-resource yaml file read R using readr::read_csv(). Metadata (descriptors schema) stored attributes returned tibble also used set column classes returned data.frame tibble.","code":""},{"path":"http://geomarker.io/CODECtools/reference/read_tdr_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read a CSV tabular data resource into R — read_tdr_csv","text":"","code":"read_tdr_csv(dir = getwd(), codec = TRUE, ...)"},{"path":"http://geomarker.io/CODECtools/reference/read_tdr_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read a CSV tabular data resource into R — read_tdr_csv","text":"dir path connection folder contains tabular-data-resource.yaml file codec logical; use CODEC descriptors? ... additional options passed onto readr::read_csv()","code":""},{"path":"http://geomarker.io/CODECtools/reference/read_tdr_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read a CSV tabular data resource into R — read_tdr_csv","text":"tibble added tabular-data-resource attributes","code":""},{"path":"http://geomarker.io/CODECtools/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"http://geomarker.io/CODECtools/reference/write_tdr.html","id":null,"dir":"Reference","previous_headings":"","what":"extract data resource metadata from a data frame and save it to a file — write_tdr","title":"extract data resource metadata from a data frame and save it to a file — write_tdr","text":"extract data resource metadata data frame save file","code":""},{"path":"http://geomarker.io/CODECtools/reference/write_tdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract data resource metadata from a data frame and save it to a file — write_tdr","text":"","code":"write_tdr(.x, file = \"tabular-data-resource.yaml\", codec = TRUE)"},{"path":"http://geomarker.io/CODECtools/reference/write_tdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract data resource metadata from a data frame and save it to a file — write_tdr","text":".x data.frame tibble file name yaml file write metadata codec logical; include CODEC descriptors schema? (see ?codec_tdr details)","code":""},{"path":"http://geomarker.io/CODECtools/reference/write_tdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract data resource metadata from a data frame and save it to a file — write_tdr","text":".x (invisibly)","code":""},{"path":"http://geomarker.io/CODECtools/reference/write_tdr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract data resource metadata from a data frame and save it to a file — write_tdr","text":"","code":"if (FALSE) { mtcars |>   add_attrs(name = \"Motor Trend Cars\", year = \"1974\") |>   add_col_attrs(mpg, title = \"MPG\", description = \"Miles Per Gallon\") |>   add_type_attrs() |>   save_tdr(my_mtcars, \"my_mtcars_tabular-data-resource.yaml\") }"},{"path":"http://geomarker.io/CODECtools/reference/write_tdr_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"write a tabular-data-resource yaml file and data csv file based on a data.frame or tibble — write_tdr_csv","title":"write a tabular-data-resource yaml file and data csv file based on a data.frame or tibble — write_tdr_csv","text":"path argument specifies folder containing codec-tdr created.  Within path, folder codec-tdr named based name attribute data.frame tibble. CSV data file named based name attribute data.frame tibble \"tabular-data-resource.yaml\" file also created.","code":""},{"path":"http://geomarker.io/CODECtools/reference/write_tdr_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write a tabular-data-resource yaml file and data csv file based on a data.frame or tibble — write_tdr_csv","text":"","code":"write_tdr_csv(.x, dir = getwd(), codec = TRUE)"},{"path":"http://geomarker.io/CODECtools/reference/write_tdr_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write a tabular-data-resource yaml file and data csv file based on a data.frame or tibble — write_tdr_csv","text":".x data.frame tibble dir path directory tdr created; see details codec logical; use CODEC descriptors?","code":""}]
